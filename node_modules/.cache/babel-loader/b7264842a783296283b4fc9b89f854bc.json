{"ast":null,"code":"import { composeWithDevTools } from \"redux-devtools-extension\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport promise from \"redux-promise-middleware\";\nimport thunkMiddleware from \"redux-thunk\"; // import { createLogger } from 'redux-logger';\n\nimport rootReducer from \"../_reducers\";\nlet middlewares = [thunkMiddleware, promise]; // if (process.env.NODE_ENV === \"development\") {\n//     const loggerMiddleware = createLogger();\n//     middlewares = [...middlewares, loggerMiddleware];\n// }\n// let wDevTools = composeWithDevTools(applyMiddleware(...middlewares));\n\nlet woDevTools = applyMiddleware(...middlewares);\n/* Enable Redux DevTools only when NODE_ENV === development */\n\nconst opts = woDevTools;\nexport const store = createStore(rootReducer, opts);","map":{"version":3,"sources":["/Users/sreenaath/Desktop/pixto/musicale-create-react-app/src/_helpers/store.js"],"names":["composeWithDevTools","createStore","applyMiddleware","promise","thunkMiddleware","rootReducer","middlewares","woDevTools","opts","store"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,0BAApC;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,eAAP,MAA4B,aAA5B,C,CACA;;AACA,OAAOC,WAAP,MAAwB,cAAxB;AAEA,IAAIC,WAAW,GAAG,CAACF,eAAD,EAAkBD,OAAlB,CAAlB,C,CACA;AACA;AACA;AACA;AAEA;;AACA,IAAII,UAAU,GAAGL,eAAe,CAAC,GAAGI,WAAJ,CAAhC;AAEA;;AACA,MAAME,IAAI,GAAGD,UAAb;AACA,OAAO,MAAME,KAAK,GAAGR,WAAW,CAACI,WAAD,EAAcG,IAAd,CAAzB","sourcesContent":["import { composeWithDevTools } from \"redux-devtools-extension\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport promise from \"redux-promise-middleware\";\nimport thunkMiddleware from \"redux-thunk\";\n// import { createLogger } from 'redux-logger';\nimport rootReducer from \"../_reducers\";\n\nlet middlewares = [thunkMiddleware, promise];\n// if (process.env.NODE_ENV === \"development\") {\n//     const loggerMiddleware = createLogger();\n//     middlewares = [...middlewares, loggerMiddleware];\n// }\n\n// let wDevTools = composeWithDevTools(applyMiddleware(...middlewares));\nlet woDevTools = applyMiddleware(...middlewares);\n\n/* Enable Redux DevTools only when NODE_ENV === development */\nconst opts = woDevTools;\nexport const store = createStore(rootReducer, opts);\n"]},"metadata":{},"sourceType":"module"}