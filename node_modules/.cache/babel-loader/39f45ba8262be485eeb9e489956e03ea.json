{"ast":null,"code":"import{composeWithDevTools}from\"redux-devtools-extension\";import{createStore,applyMiddleware}from\"redux\";import promise from\"redux-promise-middleware\";import thunkMiddleware from\"redux-thunk\";// import { createLogger } from 'redux-logger';\nimport rootReducer from\"../_reducers\";var middlewares=[thunkMiddleware,promise];// if (process.env.NODE_ENV === \"development\") {\n//     const loggerMiddleware = createLogger();\n//     middlewares = [...middlewares, loggerMiddleware];\n// }\n// let wDevTools = composeWithDevTools(applyMiddleware(...middlewares));\nvar woDevTools=applyMiddleware.apply(void 0,middlewares);/* Enable Redux DevTools only when NODE_ENV === development */var opts=woDevTools;export var store=createStore(rootReducer,opts);","map":{"version":3,"sources":["/Users/sreenaath/Desktop/pixto/musicale-create-react-app/src/_helpers/store.js"],"names":["composeWithDevTools","createStore","applyMiddleware","promise","thunkMiddleware","rootReducer","middlewares","woDevTools","opts","store"],"mappings":"AAAA,OAASA,mBAAT,KAAoC,0BAApC,CACA,OAASC,WAAT,CAAsBC,eAAtB,KAA6C,OAA7C,CACA,MAAOC,CAAAA,OAAP,KAAoB,0BAApB,CACA,MAAOC,CAAAA,eAAP,KAA4B,aAA5B,CACA;AACA,MAAOC,CAAAA,WAAP,KAAwB,cAAxB,CAEA,GAAIC,CAAAA,WAAW,CAAG,CAACF,eAAD,CAAkBD,OAAlB,CAAlB,CACA;AACA;AACA;AACA;AAEA;AACA,GAAII,CAAAA,UAAU,CAAGL,eAAe,MAAf,QAAmBI,WAAnB,CAAjB,CAEA,8DACA,GAAME,CAAAA,IAAI,CAAGD,UAAb,CACA,MAAO,IAAME,CAAAA,KAAK,CAAGR,WAAW,CAACI,WAAD,CAAcG,IAAd,CAAzB","sourcesContent":["import { composeWithDevTools } from \"redux-devtools-extension\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport promise from \"redux-promise-middleware\";\nimport thunkMiddleware from \"redux-thunk\";\n// import { createLogger } from 'redux-logger';\nimport rootReducer from \"../_reducers\";\n\nlet middlewares = [thunkMiddleware, promise];\n// if (process.env.NODE_ENV === \"development\") {\n//     const loggerMiddleware = createLogger();\n//     middlewares = [...middlewares, loggerMiddleware];\n// }\n\n// let wDevTools = composeWithDevTools(applyMiddleware(...middlewares));\nlet woDevTools = applyMiddleware(...middlewares);\n\n/* Enable Redux DevTools only when NODE_ENV === development */\nconst opts = woDevTools;\nexport const store = createStore(rootReducer, opts);\n"]},"metadata":{},"sourceType":"module"}